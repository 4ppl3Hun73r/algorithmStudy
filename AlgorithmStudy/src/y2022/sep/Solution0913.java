package y2022.sep;

// https://leetcode.com/problems/utf-8-validation/
public class Solution0913 {
    public boolean validUtf8(int[] data) {
        /*
        1 bytes : 0 으로 시작
        n bytes : n bit 가 모두 1이고, n + 1 번째 bit 는 0 따라오는 n - 1 bytes 는 시작이 10

        Number of Bytes   |        UTF-8 Octet Sequence
                          |              (binary)
      --------------------+-----------------------------------------
               1          |   0xxxxxxx
               2          |   110xxxxx 10xxxxxx
               3          |   1110xxxx 10xxxxxx 10xxxxxx
               4          |   1111 0xxx 10xxxxxx 10xxxxxx 10xxxxxx

         [197,130,1]
          197: 11000101
          130: 10000010
            2: 00000010
            1: 00000001
         */

        // 248 : 11111000
        //0xff = 11111111
        // 11110000
        // & 0xf0
        // 0xf8 : 1111 1000
        // 1111 1000
        // 1101 1110

        for (int i = 0; i < data.length; i++) {
            if ((data[i] >> 3) == 0x1e) {
                // 4자리.
                i++;
                if (i >= data.length) {
                    return false;
                }
                if ((data[i] & 0x80) != 0x80) {
                    return false;
                }
                i++;
                if (i >= data.length) {
                    return false;
                }
                if ((data[i] & 0x80) != 0x80) {
                    return false;
                }
                i++;
                if (i >= data.length) {
                    return false;
                }
                if ((data[i] & 0x80) != 0x80) {
                    return false;
                }
                continue;
            }

            // 1111 1000 & 1110 0000 =>
            // > 4
            if ((data[i] >> 4) == 0xe) {
                // 3자리.
                i++;
                if (i >= data.length) {
                    return false;
                }
                if ((data[i] & 0x80) != 0x80) {
                    return false;
                }
                i++;
                if (i >= data.length) {
                    return false;
                }
                if ((data[i] & 0x80) != 0x80) {
                    return false;
                }
                continue;
            }

            if ((data[i] >> 5) == 0x6) {
                // 4자리.
                i++;
                if (i >= data.length) {
                    return false;
                }
                if ((data[i] & 0x80) != 0x80) {
                    return false;
                }
                continue;
            }
            if ((data[i] >> 7) != 0) {
                return false;
            }
        }

        /*for (int datum : data) {
            System.out.println(Integer.toBinaryString(datum));
        }*/

        return true;
    }

    public static void main(String[] args) throws Exception {
        Solution0913 s = new Solution0913();

        //[248,130,130,130]
//        System.out.println(s.validUtf8(new int[]{197, 130, 1}));
                System.out.println(s.validUtf8(new int[]{248, 130, 130, 130}));
//        System.out.println(s.validUtf8(new int[]{230,136,145,229,143,171,231,137,155,228,184,156,230,179,189,233,190,153,229,174,189,228,185,157,230,174,181,229,149,166,231,169,186,233,151,180,231,154,132,229,149,166,230,136,145,231,169,186,233,151,180,229,174,185,233,135,143,229,176,177,230,146,146,229,143,175,230,128,156,232,167,129,229,149,166,231,169,186,233,151,180,231,187,191,229,141,161,228,186,134,229,135,160,228,184,170,228,186,134,230,146,146,229,176,189,229,191,171,229,143,145,231,187,153,97,115,107,230,187,164,233,149,156,233,152,191,230,150,175,229,136,169,229,186,183,229,176,177,230,139,137,229,188,128,229,131,181,229,176,184,118,230,157,165,232,128,131,229,175,159,228,186,134,229,188,128,229,167,139,229,176,177,231,171,139,229,136,187,229,176,177,232,190,147,228,186,134,230,137,163,229,136,134,232,174,176,229,189,149,230,159,165,232,175,162,10,10,10,232,144,168,233,135,140,231,154,132,233,165,173,229,141,161,228,184,138,230,139,137,229,188,128,232,183,157,231,166,187,229,141,161,230,156,186,228,186,134,229,146,175,230,151,165,228,186,134,229,146,175,231,156,139,118,232,183,175,232,128,131,229,155,189,233,153,133,229,138,179,229,138,168,232,138,130,230,130,178,229,137,167,228,186,134,229,188,128,230,146,173,229,128,146,232,174,161,230,151,182,118,228,184,141,231,149,153,231,156,139,228,189,160,231,154,132,228,185,166,230,157,165,231,156,139,233,162,129,229,165,150,231,164,188,231,187,147,230,157,159,228,186,134,229,188,128,229,143,145,230,156,186,230,158,132,105,232,139,165,105,229,166,130,230,158,156,231,156,139,229,142,134,229,143,178,232,167,146,229,186,166,232,128,131,232,153,145,231,166,187,229,188,128,10,10,10,10,233,152,191,230,150,175,229,133,176,231,154,132,231,169,186,233,151,180,105,229,147,166,232,139,165,105,230,136,145,232,174,169,228,187,150,230,157,165,231,156,139,230,152,175,229,144,166,0,10}));
    }
}

/*

[230,136,145,229,143,171,231,137,155,228,184,156,230,179,189,233,190,153,229,174,189,228,185,157,230,174,181,229,149,166,231,169,186,233,151,180,231,154,132,229,149,166,230,136,145,231,169,186,233,151,180,229,174,185,233,135,143,229,176,177,230,146,146,229,143,175,230,128,156,232,167,129,229,149,166,231,169,186,233,151,180,231,187,191,229,141,161,228,186,134,229,135,160,228,184,170,228,186,134,230,146,146,229,176,189,229,191,171,229,143,145,231,187,153,97,115,107,230,187,164,233,149,156,233,152,191,230,150,175,229,136,169,229,186,183,229,176,177,230,139,137,229,188,128,229,131,181,229,176,184,118,230,157,165,232,128,131,229,175,159,228,186,134,229,188,128,229,167,139,229,176,177,231,171,139,229,136,187,229,176,177,232,190,147,228,186,134,230,137,163,229,136,134,232,174,176,229,189,149,230,159,165,232,175,162,10,10,10,232,144,168,233,135,140,231,154,132,233,165,173,229,141,161,228,184,138,230,139,137,229,188,128,232,183,157,231,166,187,229,141,161,230,156,186,228,186,134,229,146,175,230,151,165,228,186,134,229,146,175,231,156,139,118,232,183,175,232,128,131,229,155,189,233,153,133,229,138,179,229,138,168,232,138,130,230,130,178,229,137,167,228,186,134,229,188,128,230,146,173,229,128,146,232,174,161,230,151,182,118,228,184,141,231,149,153,231,156,139,228,189,160,231,154,132,228,185,166,230,157,165,231,156,139,233,162,129,229,165,150,231,164,188,231,187,147,230,157,159,228,186,134,229,188,128,229,143,145,230,156,186,230,158,132,105,232,139,165,105,229,166,130,230,158,156,231,156,139,229,142,134,229,143,178,232,167,146,229,186,166,232,128,131,232,153,145,231,166,187,229,188,128,10,10,10,10,233,152,191,230,150,175,229,133,176,231,154,132,231,169,186,233,151,180,105,229,147,166,232,139,165,105,230,136,145,232,174,169,228,187,150,230,157,165,231,156,139,230,152,175,229,144,166,0,10]
 */
